{"version":3,"file":"static/js/186.8256e5f6.chunk.js","mappings":"sKACA,MAAyB,uB,SCEZA,EAAS,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAAA,OAAsC,MAA/B,SAA+B,MAArBC,QAAAA,OAAqB,MAAX,KAAW,EACpE,OAAOA,GACL,mBAAQD,KAAMA,EAAME,UAAWC,EAAYF,QAASA,EAApD,SACGF,KAGH,mBAAQC,KAAMA,EAAME,UAAWC,EAA/B,SACGJ,GAGN,C,sICRYK,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,kBAAMC,SAPS,SAAAC,GACfA,EAAEC,iBACFN,EAAcE,GACdC,EAAS,GACV,EAGC,WACE,kBACER,KAAK,OACLY,KAAK,QACLC,MAAON,EACPO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOF,MAAtB,KAEb,SAACf,EAAA,EAAD,CAAQC,MAAM,SAASC,KAAK,aAGjC,ECFD,EAjBmB,WAAO,IAAD,EACvB,GAAwCgB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,ECN6B,SAAAZ,GACjC,OAA4BD,EAAAA,EAAAA,UAAS,MAArC,eAAOa,EAAP,KAAeC,EAAf,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACFd,GACAe,EAAAA,EAAAA,iBAA2Bf,GAAOgB,KAAKH,GAAWI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAR,UAAeF,EAAIG,QAAnB,0BAAJ,GAElE,GAAE,CAACrB,IACGY,CACV,CDFgBU,CADJ,UAAGZ,EAAaa,IAAI,gBAApB,QAAgC,IAO3C,OACE,iBAAK5B,UAAU,YAAf,WACE,SAACE,EAAD,CAAYC,cANM,SAAAE,GACpBW,EAAiC,KAAjBX,EAAMwB,OAAgB,CAAExB,MAAAA,GAAU,CAAC,EACpD,IAKIY,IAAU,SAACa,EAAA,EAAD,CAAYC,MAAOd,MAGnC,C","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","hooks/useFetchMoviesByQuery.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Smq3v\"};","import { PropTypes } from 'prop-types';\nimport css from './Button.module.css';\n\nexport const Button = ({ title, type = 'button', onClick = null }) => {\n  return onClick ? (\n    <button type={type} className={css.Button} onClick={onClick}>\n      {title}\n    </button>\n  ) : (\n    <button type={type} className={css.Button}>\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { Button } from 'components/Button/Button';\n\nexport const SearchForm = ({ submitHandler }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    submitHandler(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <Button title=\"Search\" type=\"submit\" />\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useFetchMoviesByQuery } from 'hooks/useFetchMoviesByQuery';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const movies = useFetchMoviesByQuery(query);\n\n  const submitHandler = query => {\n    setSearchParams(query.trim() !== '' ? { query } : {});\n  };\n\n  return (\n    <div className=\"container\">\n      <SearchForm submitHandler={submitHandler} />\n      {movies && <MoviesList items={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import { useState, useEffect } from 'react';\nimport { moviesApi } from 'services/moviesApi';\n\nexport const useFetchMoviesByQuery = query => {\n    const [movies, setMovies] = useState(null);\n    useEffect(() => {\n        if (query) {\n            moviesApi.getMoviesByQuery(query).then(setMovies).catch(err => console.log(`${err.message} ¯\\\\_(ツ)_/¯`));\n        }\n    }, [query]);\n    return movies;\n};"],"names":["Button","title","type","onClick","className","css","SearchForm","submitHandler","useState","query","setQuery","onSubmit","e","preventDefault","name","value","onChange","target","useSearchParams","searchParams","setSearchParams","movies","setMovies","useEffect","moviesApi","then","catch","err","console","log","message","useFetchMoviesByQuery","get","trim","MoviesList","items"],"sourceRoot":""}