{"version":3,"file":"static/js/642.575d9dec.chunk.js","mappings":"sKACA,MAAyB,uB,SCEZA,EAAS,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAAA,OAAsC,MAA/B,SAA+B,MAArBC,QAAAA,OAAqB,MAAX,KAAW,EACpE,OAAOA,GACL,mBAAQD,KAAMA,EAAME,UAAWC,EAAYF,QAASA,EAApD,SACGF,KAGH,mBAAQC,KAAMA,EAAME,UAAWC,EAA/B,SACGJ,GAGN,C,oHCZD,EAA4B,6BAA5B,EAAgE,wB,SCMnDK,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExBC,EAOED,EAPFC,cACAP,EAMEM,EANFN,MACAQ,EAKEF,EALFE,KACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,OAEF,OACE,iBAAKT,UAAWC,EAAhB,WACE,gBACES,IAAKN,EAjBM,kCAiBuBA,EAfxC,oFAgBMO,IAAI,YAEN,iBAAKX,UAAWC,EAAhB,WACE,iCACGJ,QADH,IACGA,EAAAA,EAASQ,EADZ,KACoBC,EAAaM,MAAM,KAAK,GAD5C,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfP,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOM,KAAI,SAAAC,GAAK,gBAAOA,EAAMX,KAAb,eAI3B,E,kBCjCYY,EAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrC,OACE,iCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,MAAOD,EAAUE,GAAG,OAA1B,qBAIF,yBACE,SAAC,KAAD,CAAMD,MAAOD,EAAUE,GAAG,UAA1B,4BAOT,ECeD,EA1ByB,WACvB,IAAMC,GAAaC,EAAAA,EAAAA,MACbJ,GAAWK,EAAAA,EAAAA,MAEXC,ECVyB,SAAAC,GAC7B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOF,EAAP,KAAcG,EAAd,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,aAAuBJ,GAAIK,KAAKH,GAAUI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAR,UAAeF,EAAIG,QAAnB,0BAAJ,GACtD,GAAE,CAACV,IACGD,CACV,CDIeY,EADMC,EAAAA,EAAAA,MAAZC,SAGR,OAAKd,GAEH,iCACE,iBAAKxB,UAAU,YAAf,WACE,SAACJ,EAAA,EAAD,CACEC,MAAM,UACNE,QAAS,0BAAMsB,EAAU,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUC,aAAX,aAAC,EAAiBoB,YAAlB,QAA0B,IAA1C,KAEX,SAACrC,EAAD,CAAWC,KAAMqB,QAEnB,gBAAKxB,UAAU,YAAf,UACE,SAACiB,EAAD,CAAsBC,SAAQ,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAUC,WAE5C,gBAAKnB,UAAU,YAAf,UACE,SAAC,KAAD,UAda,SAACwC,EAAA,EAAD,CAAcL,QAAQ,eAkB1C,C","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","components/AdditionalNavigation/AdditionalNavigation.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","hooks/useFetchMovieById.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Smq3v\"};","import { PropTypes } from 'prop-types';\nimport css from './Button.module.css';\n\nexport const Button = ({ title, type = 'button', onClick = null }) => {\n  return onClick ? (\n    <button type={type} className={css.Button} onClick={onClick}>\n      {title}\n    </button>\n  ) : (\n    <button type={type} className={css.Button}>\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieCard\":\"MovieCard_MovieCard__DStH+\",\"info\":\"MovieCard_info__QTHMi\"};","import { PropTypes } from 'prop-types';\nimport css from './MovieCard.module.css';\n\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\nconst noImage =\n  'https://upload.wikimedia.org/wikipedia/commons/4/46/Question_mark_%28black%29.svg';\n\nexport const MovieCard = ({ item }) => {\n  const {\n    backdrop_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = item;\n  return (\n    <div className={css.MovieCard}>\n      <img\n        src={backdrop_path ? imgBaseUrl + backdrop_path : noImage}\n        alt=\"poster\"\n      />\n      <div className={css.info}>\n        <h2>\n          {title ?? name} ({release_date.split('-')[0]})\n        </h2>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(genre => `${genre.name} `)}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  item: PropTypes.shape({\n    backdrop_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n};\n","import { Link } from 'react-router-dom';\n\nexport const AdditionalNavigation = ({ location }) => {\n  return (\n    <>\n      <h3>Additional Information</h3>\n      <ul>\n        <li>\n          <Link state={location} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={location} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { useLocation, useNavigate, useParams, Outlet } from 'react-router-dom';\n\nimport { useFetchMovieById } from 'hooks/useFetchMovieById';\n\nimport { Button } from 'components/Button/Button';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Notification } from 'components/Notification/Notification';\nimport { AdditionalNavigation } from 'components/AdditionalNavigation/AdditionalNavigation';\n\nconst MovieDetailsPage = () => {\n  const navigateTo = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const movie = useFetchMovieById(movieId);\n\n  if (!movie) return <Notification message=\"Wrong movie\" />;\n  return (\n    <>\n      <div className=\"container\">\n        <Button\n          title=\"Go Back\"\n          onClick={() => navigateTo(location?.state?.from ?? '/')}\n        />\n        <MovieCard item={movie} />\n      </div>\n      <div className=\"container\">\n        <AdditionalNavigation location={location?.state} />\n      </div>\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useState, useEffect } from 'react';\nimport { moviesApi } from 'services/moviesApi';\n\nexport const useFetchMovieById = id => {\n    const [movie, setMovie] = useState(null);\n    useEffect(() => {\n        moviesApi.getMovieById(id).then(setMovie).catch(err => console.log(`${err.message} ¯\\\\_(ツ)_/¯`));\n    }, [id]);\n    return movie;\n};"],"names":["Button","title","type","onClick","className","css","MovieCard","item","backdrop_path","name","release_date","vote_average","overview","genres","src","alt","split","Math","round","map","genre","AdditionalNavigation","location","state","to","navigateTo","useNavigate","useLocation","movie","id","useState","setMovie","useEffect","moviesApi","then","catch","err","console","log","message","useFetchMovieById","useParams","movieId","from","Notification"],"sourceRoot":""}